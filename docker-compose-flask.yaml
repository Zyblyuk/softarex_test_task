version: "3.9"

services:
 postgres:
    image: postgres:11

    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}

    restart: always

    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


 predict_api:
  build:
    context: ./flask_version
    dockerfile: Dockerfile-predict

  env_file:
    - .env

  command: >
    sh -c "python predictAPI.py"

  restart: always

  ports:
    - "9876:9876"

 test_task_app:
  build:
   context: ./flask_version
   dockerfile: Dockerfile-app

  env_file:
    - .env

  command: >
   sh -c "python manage.py makemigrations RevenuePredict
          python manage.py migrate
          python manage.py runserver 0.0.0.0:8000"
  restart: always

  ports:
    - "8000:8000"

  depends_on:
     predict_api:
        condition: service_started
     postgres:
        condition: service_healthy


